#!/bin/bash

declare -i offset
declare -i duration

if [ $# -eq 0 ]; then
    (( offset = 120 ))
else
    (( offset = "$1" ))
fi

base_instance=`as-describe-auto-scaling-instances | awk '{ print $2 }'`
stats_start_date=`date --utc +"%Y-%m-%dT%H:%M:00Z"`
echo "test run started at $stats_start_date" > last_run.stats

# Client A (delay: 0 * offset, duration: 7 * offset)
(( duration = 7 * offset ))
gnome-terminal --title=A --geometry 36x25 -x ./client $duration AAA 2>/dev/null

date
echo "started client A, it will run for $duration seconds; sleeping $offset seconds before starting client B"

./track_instances $duration > last_run.instances &

sleep $offset

# Client B (delay: 1 * offset, duration: 4 * offset)
(( duration = 4 * offset ))
gnome-terminal --title=B --geometry 36x25 -x ./client $duration BBB 2>/dev/null

date
echo "started client B, it will run for $duration seconds; sleeping $offset seconds before starting client C"

sleep $offset

# Client C (delay: 2 * offset, duration: 4 * offset)
(( duration = 4 * offset ))
gnome-terminal --title=C --geometry 36x25 -x ./client $duration CCC 2>/dev/null

date
echo "started client C, it will run for $duration seconds; sleeping $offset seconds before starting client D"

sleep $offset

# Client D (delay: 3 * offset, duration: 1 * offset)
(( duration = 1 * offset ))
gnome-terminal --title=D --geometry 36x25 -x ./client $duration DDD 2>/dev/null

date
echo "started client D, it will run for $duration seconds"

sleep $offset

date
echo "client D terminated"

while ((1)); do
    date
    ps ax | grep "client " | egrep -v '(dhclient|grep)'
    sleep 15
    # Are we done? All clients terminated?
    numclients=`ps ax | grep "client " | egrep -v '(dhclient|grep)' | wc -l`
    if (( numclients == 0 )); then
        break
    fi
done

mon-get-stats --metric-name CPUUtilization --namespace AWS/EC2 --dimensions InstanceId=$base_instance --statistics Average --start-time $stats_start_date >> last_run.stats
